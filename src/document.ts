import { SvelteDocumentOptions } from "./index.ts"

import { JSDOM } from "jsdom"
import prettier from "prettier"

export interface SvelteDocument {
  /**
   * Global CSS, defined in "+layout.svelte". Optional.
   */
  css?: string

  /**
   * Pages.
   */
  pages: SvelteDocumentPage[]
}

export interface SvelteDocumentPage {
  /**
   * HTML generated by Svelte for this page.
   */
  html: string

  /**
   * CSS generated by Svelte for this page.
   */
  css: string

  /**
   * Page number.
   */
  count: number
}

/**
 * Generate a single HTML document from the provided pages.
 */
export async function generateDocument(
  input: SvelteDocument,
  opts: SvelteDocumentOptions,
) {
  const pageStyles = `
    @page {
        margin: 0mm 0mm 0mm 0mm;
        size: ${opts.size ?? "A4"} ${opts.orientation ?? "portrait"};
    }

    html, body {
        padding: 0;
        margin: 0;
        min-width: 100%;
        min-height: 100%;
    }

    section._svelte-page {
        height: 100%;
        width: 100%;
    }
    `

  const dom = new JSDOM()

  const document = dom.window.document
  const documentStyle = document.createElement("style")
  documentStyle.textContent += pageStyles
  documentStyle.textContent += input.css ?? ""
  document.head.append(documentStyle)

  let i = 1
  for (const page of input.pages) {
    const section = document.createElement("section")
    section.id = `page-${i++}`
    section.classList.add("_svelte-page")
    section.innerHTML = page.html
    document.body.append(section)
    documentStyle.textContent += page.css ?? ""
  }

  return await prettier.format(dom.serialize(), { parser: "html" })
}
